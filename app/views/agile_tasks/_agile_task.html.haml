- form_for(agile_task) do |f|
  .input_field
    = f.hidden_field :story_id, :value => story.id
  
  -#
    .input_field
      %b Tracker ticket
      %br/
      = f.text_field :tracker_ticket_id
    
    .input_field
      %b Tracker ticket submitter
      %br/
      = f.text_field :tracker_ticket_submitter
  
  .input_field
    - if !agile_task.completion_date
      == <input type="checkbox" name="task_completed" id="task_completed" value = "1" /><input type="hidden" name="task_completed" value = "0" />
      %label.inline{:for => "task_completed"} 
        %b Completed
    - else
      %b Completion date:
      = f.date_select :completion_date
      == (<input type="checkbox" name="task_not_completed" id="task_not_completed" value = "1" /><input type="hidden" name="task_not_completed" value = "0" />
      %label.inline{:for => "task_not_completed"} 
        %b Make not completed)

  .input_field
    = f.label :name
    = f.text_field :name, :class => "long"

  .input_field
    = f.check_box :bug
    = f.label :bug, "Is it a bug fix?", :class => "inline" 

  .input_field
    - is_open = agile_task.task_owners.empty? ? true : false
    .drawer{:class => is_open ? "drawer_open" : "drawer_closed"}
      Add/Remove task owners
      .drawer_closed_data{:class => is_open ? "hidden_div" : ""}
        - if agile_task.owners.blank?
          Click to select task owners
        - else
          %ul
            - for owner in agile_task.owners
              %li= owner.full_name
    .drawer_content{:class => is_open ? "" : "hidden_div"}
      - for developer in @project.developers
        = check_box_tag "user_ids[]", developer.id, agile_task.owners.include?(developer), :id => "user_ids_" + developer.id.to_s
        %label.inline{:for => "user_ids_" + developer.id.to_s}= developer.full_name
        %br/
  
  .input_field
    = f.label :notes
    = f.text_area :notes, :class => "big"

  .input_field
    = f.label :task_units
    .help_info Estimation of time in hours required to finish the task
    = f.text_field :task_units, :class => "numeric_entry"

  .input_field
    = f.submit button
